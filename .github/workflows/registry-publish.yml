name: Publish app

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  REPOSITORY: ${{ github.repository_owner }}
  # github.repository as <account>/<repo>
  CONTROLLER_IMAGE_NAME: k8s-insider-controller
  NETWORK_MANAGER_IMAGE_NAME: k8s-insider-network-manager
  ROUTER_IMAGE_NAME: k8s-insider-router

jobs:
  controller:
    name: Build and publish k8s-insider-controller image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.13.1'

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2.9.1
        with:
          driver: docker-container

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the base k8s-insider-agent image
        id: base-build
        uses: docker/build-push-action@v4.1.1
        with:
          file: Dockerfile.app
          push: false
          tags: app-build:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract Docker metadata for k8s-insider-controller
        id: controller-meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.CONTROLLER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push k8s-insider-controller image
        id: controller-build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          file: Dockerfile.controller
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.controller-meta.outputs.tags }}
          labels: ${{ steps.controller-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: |
            app-build=docker-image://app-build:latest

      - name: Sign the published k8s-insider-controller image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.controller-meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.controller-build-and-push.outputs.digest }}
  
      - name: Extract Docker metadata for k8s-insider-network-manager
        id: network-manager-meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.NETWORK_MANAGER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push k8s-insider-network-manager image
        id: network-manager-build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          context: .
          file: Dockerfile.network-manager
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.network-manager-meta.outputs.tags }}
          labels: ${{ steps.network-manager-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: |
            app-build=docker-image://app-build:latest

      - name: Sign the published k8s-insider-network-manager image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.network-manager-meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.network-manager-build-and-push.outputs.digest }}

      - name: Extract Docker metadata for k8s-insider-router
        id: router-meta
        uses: docker/metadata-action@v4.6.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.ROUTER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}

      - name: Build and push k8s-insider-router image
        id: router-build-and-push
        uses: docker/build-push-action@v4.1.1
        with:
          file: Dockerfile.router
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.router-meta.outputs.tags }}
          labels: ${{ steps.router-meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: |
            app-build=docker-image://app-build:latest

      - name: Sign the published k8s-insider-router image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.router-meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.router-build-and-push.outputs.digest }}
